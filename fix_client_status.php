<?php

require_once 'vendor/autoload.php';

use App\Models\User;
use App\Models\Client;
use Illuminate\Support\Facades\DB;

// Bootstrap Laravel
$app = require_once 'bootstrap/app.php';
$app->make('Illuminate\Contracts\Console\Kernel')->bootstrap();

echo "ЁЯФН р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╣Бр╕ер╕░р╣Бр╕Бр╣Йр╣Др╕В client_status р╕Вр╕нр╕Зр╕Ьр╕╣р╣Йр╣Гр╕Кр╣Й\n";
echo "==========================================\n\n";

// р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Ьр╕╣р╣Йр╣Гр╕Кр╣Йр╕Чр╕▒р╣Йр╕З 3 р╕Др╕Щ
$emails = [
    'hamsftmo@gmail.com',
    'Janischa.trade@gmail.com', 
    'kantapong0592@gmail.com'
];

foreach ($emails as $email) {
    echo "ЁЯУз р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Ьр╕╣р╣Йр╣Гр╕Кр╣Й: {$email}\n";
    
    $user = User::where('email', $email)->first();
    
    if (!$user) {
        echo "   тЭМ р╣Др╕бр╣Ир╕Юр╕Ър╕Ьр╕╣р╣Йр╣Гр╕Кр╣Й\n\n";
        continue;
    }
    
    echo "   тЬЕ р╕Юр╕Ър╕Ьр╕╣р╣Йр╣Гр╕Кр╣Й: {$user->name} (ID: {$user->id})\n";
    
    // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕ер╕╣р╕Бр╕Др╣Йр╕▓р╕Чр╕╡р╣Ир╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Вр╣Йр╕нр╕З
    $clients = Client::where('partner_account', $user->id)->get();
    
    if ($clients->isEmpty()) {
        echo "   тЪая╕П  р╣Др╕бр╣Ир╕Юр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕ер╕╣р╕Бр╕Др╣Йр╕▓р╕Чр╕╡р╣Ир╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Вр╣Йр╕нр╕З\n";
        
        // р╕ер╕нр╕Зр╕Др╣Йр╕Щр╕лр╕▓р╕Фр╣Йр╕зр╕в partner_account р╕Чр╕╡р╣Ир╣Ар╕Ыр╣Зр╕Щ string
        $clients = Client::where('partner_account', (string)$user->id)->get();
        
        if ($clients->isEmpty()) {
            echo "   тЭМ р╣Др╕бр╣Ир╕Юр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕ер╕╣р╕Бр╕Др╣Йр╕▓р╣Гр╕Щр╕гр╕╣р╕Ыр╣Бр╕Ър╕Ър╣Гр╕Фр╣Ж\n\n";
            continue;
        }
    }
    
    echo "   ЁЯУК р╕Юр╕Ър╕ер╕╣р╕Бр╕Др╣Йр╕▓ {$clients->count()} р╕гр╕▓р╕вр╕Бр╕▓р╕г\n";
    
    // р╣Бр╕кр╕Фр╕Зр╕кр╕Цр╕┤р╕Хр╕┤ client_status р╕Ыр╕▒р╕Ир╕Ир╕╕р╕Ър╕▒р╕Щ
    $statusCounts = $clients->groupBy('client_status')->map->count();
    echo "   ЁЯУИ р╕кр╕Цр╕┤р╕Хр╕┤ client_status р╕Ыр╕▒р╕Ир╕Ир╕╕р╕Ър╕▒р╕Щ:\n";
    foreach ($statusCounts as $status => $count) {
        echo "      - {$status}: {$count} р╕гр╕▓р╕вр╕Бр╕▓р╕г\n";
    }
    
    // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ир╕▓р╕Б raw_data р╣Ар╕Юр╕╖р╣Ир╕нр╕лр╕▓р╕Др╣Ир╕▓ client_status р╕Чр╕╡р╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З
    $correctStatuses = [];
    foreach ($clients as $client) {
        if (isset($client->raw_data['client_status'])) {
            $correctStatuses[] = $client->raw_data['client_status'];
        }
    }
    
    if (!empty($correctStatuses)) {
        echo "   ЁЯФН р╕Юр╕Ъ client_status р╣Гр╕Щ raw_data:\n";
        $uniqueStatuses = array_unique($correctStatuses);
        foreach ($uniqueStatuses as $status) {
            $count = count(array_filter($correctStatuses, function($s) use ($status) { return $s === $status; }));
            echo "      - {$status}: {$count} р╕гр╕▓р╕вр╕Бр╕▓р╕г\n";
        }
        
        // р╕нр╕▒р╕Юр╣Ар╕Фр╕Х client_status р╣Гр╕лр╣Йр╕Хр╕гр╕Зр╕Бр╕▒р╕Ъ raw_data
        $updatedCount = 0;
        foreach ($clients as $client) {
            if (isset($client->raw_data['client_status']) && 
                $client->raw_data['client_status'] !== $client->client_status) {
                
                $oldStatus = $client->client_status;
                $newStatus = $client->raw_data['client_status'];
                
                $client->update(['client_status' => $newStatus]);
                $updatedCount++;
                
                echo "      ЁЯФД р╕нр╕▒р╕Юр╣Ар╕Фр╕Х client_uid: {$client->client_uid} р╕Ир╕▓р╕Б {$oldStatus} р╣Ар╕Ыр╣Зр╕Щ {$newStatus}\n";
            }
        }
        
        if ($updatedCount > 0) {
            echo "   тЬЕ р╕нр╕▒р╕Юр╣Ар╕Фр╕Х client_status р╣Ар╕гр╕╡р╕вр╕Ър╕гр╣Йр╕нр╕в {$updatedCount} р╕гр╕▓р╕вр╕Бр╕▓р╕г\n";
        } else {
            echo "   тД╣я╕П  client_status р╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕Зр╣Бр╕ер╣Йр╕з р╣Др╕бр╣Ир╕Хр╣Йр╕нр╕Зр╕нр╕▒р╕Юр╣Ар╕Фр╕Х\n";
        }
    } else {
        echo "   тЪая╕П  р╣Др╕бр╣Ир╕Юр╕Ъ client_status р╣Гр╕Щ raw_data\n";
    }
    
    echo "\n";
}

echo "ЁЯОп р╕кр╕гр╕╕р╕Ыр╕Бр╕▓р╕гр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╣Бр╕ер╕░р╣Бр╕Бр╣Йр╣Др╕Вр╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щ!\n";
echo "=====================================\n";

// р╣Бр╕кр╕Фр╕Зр╕кр╕Цр╕┤р╕Хр╕┤р╕гр╕зр╕б
echo "\nЁЯУК р╕кр╕Цр╕┤р╕Хр╕┤р╕гр╕зр╕бр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф:\n";
$totalStatusCounts = Client::selectRaw('client_status, COUNT(*) as count')
    ->groupBy('client_status')
    ->get()
    ->pluck('count', 'client_status')
    ->toArray();

foreach ($totalStatusCounts as $status => $count) {
    echo "   - {$status}: {$count} р╕гр╕▓р╕вр╕Бр╕▓р╕г\n";
}

echo "\nтЬЕ р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╣Бр╕ер╕░р╣Бр╕Бр╣Йр╣Др╕В client_status р╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щр╣Бр╕ер╣Йр╕з!\n"; 