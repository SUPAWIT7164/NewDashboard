<?php

require_once 'vendor/autoload.php';

$app = require_once 'bootstrap/app.php';
$app->make(Illuminate\Contracts\Console\Kernel::class)->bootstrap();

echo "=== ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á clients ===\n\n";

// 1. ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
$totalBefore = App\Models\Client::count();
$uniqueBefore = App\Models\Client::distinct('client_uid')->count();
$duplicateBefore = $totalBefore - $uniqueBefore;

echo "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:\n";
echo "- ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {$totalBefore}\n";
echo "- ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô client_uid ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥: {$uniqueBefore}\n";
echo "- ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥: {$duplicateBefore}\n\n";

if ($duplicateBefore == 0) {
    echo "‚úÖ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥ ‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç\n";
    exit;
}

// 2. ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥
echo "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥...\n";
$duplicates = Illuminate\Support\Facades\DB::select('
    SELECT client_uid, COUNT(*) as count 
    FROM clients 
    GROUP BY client_uid 
    HAVING COUNT(*) > 1
    ORDER BY count DESC
');

echo "‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥ " . count($duplicates) . " ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:\n";
foreach ($duplicates as $dup) {
    echo "- {$dup->client_uid} ({$dup->count} records)\n";
}

// 3. ‡∏ñ‡∏≤‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏•‡∏ö
echo "\n" . str_repeat("=", 50) . "\n";
echo "‚ö†Ô∏è  ‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏≤‡∏ß‡∏£\n";
echo "üìã ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏•‡∏ö: ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (ID ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î) ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤\n";
echo "üíæ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£\n";
echo str_repeat("=", 50) . "\n";

echo "‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? (y/n): ";
$handle = fopen("php://stdin", "r");
$confirm = trim(fgets($handle));
fclose($handle);

if (strtolower($confirm) !== 'y') {
    echo "‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£\n";
    exit;
}

// 4. ‡∏™‡∏£‡πâ‡∏≤‡∏á backup ‡∏Å‡πà‡∏≠‡∏ô‡∏•‡∏ö
echo "\nüì¶ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á backup...\n";
$backupFileName = 'storage/backups/clients_before_cleanup_' . date('Y-m-d_H-i-s') . '.json';

// ‡∏™‡∏£‡πâ‡∏≤‡∏á directory ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ
if (!file_exists('storage/backups')) {
    mkdir('storage/backups', 0755, true);
}

$allClients = App\Models\Client::all()->toArray();
file_put_contents($backupFileName, json_encode($allClients, JSON_PRETTY_PRINT));
echo "‚úÖ Backup ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß: {$backupFileName}\n";

// 5. ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥
echo "\nüßπ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥...\n";
$deletedCount = 0;

foreach ($duplicates as $dup) {
    $clientUid = $dup->client_uid;
    
    // ‡∏´‡∏≤ records ‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö client_uid ‡∏ô‡∏µ‡πâ
    $clientRecords = App\Models\Client::where('client_uid', $clientUid)
        ->orderBy('id', 'desc')
        ->get();
    
    // ‡πÄ‡∏Å‡πá‡∏ö record ‡πÅ‡∏£‡∏Å (ID ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î = ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î) ‡∏•‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
    $keepRecord = $clientRecords->first();
    $recordsToDelete = $clientRecords->skip(1);
    
    echo "  - {$clientUid}: ‡πÄ‡∏Å‡πá‡∏ö ID {$keepRecord->id}, ‡∏•‡∏ö " . $recordsToDelete->count() . " records\n";
    
    foreach ($recordsToDelete as $record) {
        $record->delete();
        $deletedCount++;
    }
}

// 6. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
echo "\nüìä ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:\n";
$totalAfter = App\Models\Client::count();
$uniqueAfter = App\Models\Client::distinct('client_uid')->count();
$duplicateAfter = $totalAfter - $uniqueAfter;

echo "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:\n";
echo "- ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {$totalAfter} (‡∏•‡∏î‡∏•‡∏á " . ($totalBefore - $totalAfter) . ")\n";
echo "- ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô client_uid ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥: {$uniqueAfter}\n";
echo "- ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥: {$duplicateAfter}\n";
echo "- ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô records ‡∏ó‡∏µ‡πà‡∏•‡∏ö: {$deletedCount}\n";

if ($duplicateAfter == 0) {
    echo "\n‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô! ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥‡πÅ‡∏•‡πâ‡∏ß\n";
    echo "üéâ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß: {$totalAfter} ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ\n";
} else {
    echo "\n‚ö†Ô∏è  ‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥‡∏≠‡∏¢‡∏π‡πà ‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°\n";
}

// 7. ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
echo "\n" . str_repeat("=", 50) . "\n";
echo "üìù ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ:\n";
echo "1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö\n";
echo "2. ‡∏´‡∏≤‡∏Å‡∏û‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ restore ‡∏à‡∏≤‡∏Å backup ‡πÑ‡∏î‡πâ\n";
echo "3. ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå backup ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß\n";
echo "4. ‡∏£‡∏±‡∏ô sync ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏ã‡πâ‡∏≥\n";
echo str_repeat("=", 50) . "\n"; 